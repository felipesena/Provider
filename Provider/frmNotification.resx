<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHoAAABeCAYAAADsZADEAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAA95JREFUeF7tkUluHTEMBXOiXMeH8qEdcCG48VMkJbUGaiigVr8oN/z+/P3++rnu
        7x36EI8cuhZ6axW3H7o39Dcjut3Qs6FviuAWQ0eFvnWWSw+9CvTto11y6LfQmzm+hd4c5VJD10DvtLQG
        eqe3SwxdCr0xwlLojV6GHzoXup1pLnTbw7BD50K3kcyFblsacugc6C6yOdBdK8MN7UE3K+lBNy0MM3QO
        dLeiOdDdG0MM7UE3O+hBN7VOH9qDbnbSg25qnDq0B93sqAfdlDptaAvqT9CC+hLDDU3tSVpQn+uUoTWo
        PVENanMdPrQF9aeqQW2OQ4e2oP5kLaj3DDE0tde2Yw8bWoPa668a1FoOGVqD2uv/alCreYdeQA1qNbsP
        rUHtVVeDWnLK0NRdfQnqyK5Da1B79dWg9tPhQ1N3zZeg7tM79GJqUPu029Aa1O7uE/q9VIK6p0OHpm53
        CepKJKh7eofuqAa1JWpQm+wyNEHdzlpQXypBXfIO3UEL6mskqEveoRtrQX2tBHXJO3QjPejmjQR1ySWH
        fkK/j9aDblpIUCc2H5qgrlaCulF60E0rCerELYYWqO2tB920lKBO3GZogfpeetBNawnqxOWGFi2ob60H
        3fSQoE5ccmjRgvpWWlDfU4I6cdmhRQvq32pBfW8J6sSlhxYtqK/VgvoREtSJyw8tetBNiRbUj5KgTtxi
        aNGDbnK0oH6kBHXiNkOLHnRjaUH9aAnqxCFDC9T20INuPvWgmxkS1InNhxYJ6nrpQTdJD7qZIUFdcsuh
        kxalvUA3sySoS249tGiR2wnPNoIEdcnthxYtvN+Fz/ciSFCX7DK0SFA3yhronQhqUJs8ZmixBLqPIkHd
        06OGFnOgu0gS1D0dOrRA7WgtqI+kBrVPuw0tEtTNkKAumgR1nw4fWqD26qtB7addhxYJ6q6+BHXklKEF
        aq+6GtSS3YcWNai9sgR1mnfoBdSgVnPI0KIGtddfNai1nD60QP217f9s2NCiBfUna0G959ChRQvqT1WD
        2hyHDy1qUHuiFtTnGGpogfqTtKA+1ylDixbUn6AF9SVOG1r0oJtdtaC+1KlDix50s5MedFPj9KFFD7rZ
        QQ+6qTXE0GIOdLeiOdDdG8MMLeZAdyuZA929NdTQyRzoLrI50F0rQw4t5kK3kcyFblsaduhkLnQ701zo
        tofhhxZLoTdGWAq90cslhk7WQO+0tAZ6p7dLDZ18C72Z41vozVEuOXRyFejbR7v00Mmo0LfOcouhn86G
        vimC2w39aW/ob0Z0+6HJWuitVTxy6BO9Qx/iHfoQ79CHeIc+xDv0EX79/APvt9H165xVBAAAAABJRU5E
        rkJggg==
</value>
  </data>
  <metadata name="timer_close.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>